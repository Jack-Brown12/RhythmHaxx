import"../chunks/DsnmJJEf.js";import{i as ut}from"../chunks/CbCRK_Jy.js";import{ah as V,V as O,a0 as E,_,$ as k,X as U,a1 as F,Y as M,U as W,ab as X,ai as pt,aj as ot,Z as G,m as y,ac as B,A as L,W as N,ae as H,x as q}from"../chunks/CAENWPe6.js";import{i as R}from"../chunks/CP4xJXuJ.js";import{b as K}from"../chunks/BopjTtzy.js";import{s as gt,t as mt}from"../chunks/wm4-jcPJ.js";const ft=""+new URL("../assets/example.Cm2TaKrs.jpg",import.meta.url).href;var vt=O('<div class="absolute bottom-4 left-0 w-full px-3"><button class="w-full rounded bg-blue-500 px-4 py-2 text-white hover:cursor-pointer hover:bg-blue-600 disabled:cursor-not-allowed disabled:bg-gray-400"> </button></div>'),ht=O(`<div class="relative h-screen w-64 bg-gray-600 px-2 text-white"><h1 class="pt-2 pb-1 text-center text-4xl font-bold">Draw2Route</h1> <p>Want to spice your run up? Have a cool strava profile? Draw a shape and we'll try to draw it
		using streets! <br/> <span class="text-xs font-extralight italic">(Accurcy may vary based on location and street availability)</span></p> <img alt="Example route drawn on a map" class="my-4 rounded border border-white"/> <hr class="my-2 border-white"/> <p> </p> <!></div>`);function Q(a,o){var t=ht(),e=E(_(t),4),r=E(e,4),d=_(r,!0);k(r);var i=E(r,2);{var p=s=>{var l=vt(),n=_(l);n.__click=function(...c){o.onButtonClick?.apply(this,c)};var g=_(n,!0);k(n),k(l),U(()=>{n.disabled=!o.buttonEnabled,F(g,o.buttonText)}),M(s,l)};R(i,s=>{o.buttonText!=""&&s(p)})}k(t),U(()=>{gt(e,"src",ft),F(d,o.description)}),M(a,t)}V(["click"]);const Z=(a,o)=>{if(!a||!o)return;const t=window.devicePixelRatio||1,e=o.getBoundingClientRect();o.width=e.width*t,o.height=e.height*t,a.setTransform(t,0,0,t,0,0)};var bt=O('<div class="flex flex-row"><!> <canvas class="h-screen w-full"></canvas></div>');function wt(a,o){W(o,!0);let t,e=null;const r=10;let d=!1,i=B(!1),p=[],s=[],l=0;const n=()=>{l||(l=requestAnimationFrame(g))},g=()=>{if(l=0,!e||s.length===0)return;e.beginPath();let[m,h]=p.at(-1)??s.shift();for(p.length===0&&p.push([m,h]),e.moveTo(m,h);s.length;){const[b,A]=s.shift();Math.hypot(b-m,A-h)>=r&&(e.lineTo(b,A),p.push([b,A]),m=b,h=A)}e.stroke()},c=m=>{y(i)&&(s=[],p=[],e?.clearRect(0,0,t.width,t.height),L(i,!1)),d=!0;const h=m.clientX-t.offsetLeft,b=m.clientY-t.offsetTop;s.push([h,b]),n()},u=m=>{if(!d||y(i))return;const h=m.clientX-t.offsetLeft,b=m.clientY-t.offsetTop;s.push([h,b]),n()},f=m=>{p.length>=10&&L(i,!0)};X(()=>{e=t.getContext("2d"),!(typeof window>"u"||!e)&&(Z(e,t),e.strokeStyle="black",e.lineWidth=2,e.lineCap="round",e.lineJoin="round",window.addEventListener("pointerup",f),window.addEventListener("resize",()=>Z(e,t)))}),pt(()=>{typeof window>"u"||(window.removeEventListener("pointerup",f),window.removeEventListener("resize",()=>Z(e,t)),l&&cancelAnimationFrame(l))});var v=bt(),x=_(v);Q(x,{onButtonClick:()=>o.nextStage(p),description:`To get started, click and drag a continuous route on the white canvas. Don't release until you're
		done! If you mess up, just click again to redraw on a fresh canvas.`,buttonText:"Insert onto the globe!",get buttonEnabled(){return y(i)}});var P=E(x,2);P.__pointerdown=c,P.__pointermove=u,K(P,m=>t=m,()=>t),k(v),ot("pointerleave",P,f),M(a,v),G()}V(["pointerdown","pointermove"]);function yt(a,o){a.src=o}const xt=a=>{var o,t,e,r="The Google Maps JavaScript API",d="google",i="importLibrary",p="__ib__",s=document,l=window,n=l[d]||(l[d]={}),g=n.maps||(n.maps={}),c=new Set,u=new URLSearchParams,f=()=>o||(o=new Promise(async(v,x)=>{await(t=s.createElement("script")),u.set("libraries",[...c]+"");for(e in a)u.set(e.replace(/[A-Z]/g,P=>"_"+P[0].toLowerCase()),a[e]);u.set("callback",d+".maps."+p),yt(t,"https://maps.googleapis.com/maps/api/js?"+u),g[p]=v,t.onerror=()=>o=x(Error(r+" could not load.")),t.nonce=s.querySelector("script[nonce]")?.nonce||"",s.head.append(t)}));g[i]?console.warn(r+" only loads once. Ignoring:",a):g[i]=(v,...x)=>c.add(v)&&f().then(()=>g[i](v,...x))},_t=a=>`The setOptions() function should only be called once. The options passed to the additional call (${JSON.stringify(a)}) will be ignored.`,kt=a=>`The google.maps.importLibrary() function is already defined, and @googlemaps/js-api-loader will use the existing function instead of overwriting it. The options passed to setOptions (${JSON.stringify(a)}) will be ignored.`,Pt=()=>{},Et=()=>{};let at=!1;function Tt(a){if(at){Pt(_t(a));return}St(a),at=!0}async function D(a){if(!window?.google?.maps?.importLibrary)throw new Error("google.maps.importLibrary is not installed.");return await google.maps.importLibrary(a)}function St(a){const o=!!window.google?.maps?.importLibrary;o&&Et(kt(a)),o||xt(a)}const Mt=(a,o,t)=>{if(!a||a.length===0)return[];const e=[];let r=o;e.push(r);for(let d=1;d<a.length;d++){const[i,p]=a[d-1],[s,l]=a[d],n=s-i,g=l-p,c=Math.hypot(n,g);if(c===0){e.push(r);continue}const f=c/t*1e3,v=(Math.atan2(n,-g)*180/Math.PI+360)%360,x=google.maps.geometry.spherical.computeOffset(r,f,v);r={lat:x.lat(),lng:x.lng()},e.push(r)}return e},nt=a=>{if(!a||a.length<2)return 0;const o=a.map(e=>new google.maps.LatLng(e.lat,e.lng));return google.maps.geometry.spherical.computeLength(o)/1e3},Lt=(a,o)=>{if(!a||a.length===0)return[];if(a.length===1)return[a[0]];const[t,e]=a[0],r=o*Math.PI/180,d=Math.cos(r),i=Math.sin(r);return a.map(([p,s],l)=>{if(l===0)return[p,s];const n=p-t,g=s-e,c=n*d-g*i,u=n*i+g*d;return[t+c,e+u]})};var It=O('<div class="absolute top-1/2 left-1/2 z-10 -translate-x-1/2 -translate-y-1/2 rounded-2xl border border-gray-300 bg-white/80 px-6 py-4 shadow-lg backdrop-blur-md">Please enter a starting location to see your route on the map.</div>'),Ot=O('<div class="absolute bottom-6 left-1/2 z-10 flex -translate-x-1/2 flex-col items-center space-y-3 rounded-2xl border border-gray-300 bg-white/80 px-4 py-3 shadow-lg backdrop-blur-md"><div class="flex w-full flex-col items-center"><label for="rotation-slider" class="mb-1 text-xs font-medium text-gray-700">Rotation (Â°)</label> <input id="rotation-slider" type="range" min="-180" max="180" step="1" value="0" class="h-2 w-64 cursor-pointer appearance-none rounded-lg bg-gray-200 accent-black"/></div> <div class="flex w-full flex-col items-center"><label for="scale-slider" class="mb-1 text-xs font-medium text-gray-700">Scale (pixels/km)</label> <input id="scale-slider" type="range" min="1" max="40" step="0.5" value="20" class="h-2 w-64 cursor-pointer appearance-none rounded-lg bg-gray-200 accent-black"/></div></div>'),At=O('<div class="absolute top-3 right-3 rounded-xl border border-gray-300 bg-white/80 px-4 py-2 text-sm font-semibold text-gray-800 shadow-lg backdrop-blur-md"> </div>'),Dt=O('<div class="flex flex-row"><!> <div class="relative h-screen w-full"><form><div class="absolute top-4 left-1/2 z-10 w-96 -translate-x-1/2"><input type="text" placeholder="Enter starting location..." class="w-full rounded-lg border border-gray-300 bg-white/90 px-4 py-2 shadow-lg outline-none focus:ring-2 focus:ring-blue-500"/></div></form> <!> <div class="h-full w-full"></div></div></div> <!>',1);function Ct(a,o){W(o,!0);let t,e,r,d,i,p=1e3/20,s=0,l,n=null,g=null,c=B(!1),u=B(0),f=B("Mapify!");X(async()=>{if(!window||!r)return;const{Map:w}=await D("maps"),T=await D("places");await D("geometry");const{AdvancedMarkerElement:I}=await D("marker");t=new w(r,{center:{lat:43.4772382,lng:-80.5520715},mapId:"main",zoom:13,disableDefaultUI:!0,gestureHandling:"none",zoomControl:!0,keyboardShortcuts:!1,disableDoubleClickZoom:!0}),i=()=>{if(!l||!o.points||o.points.length===0)return;const C={lat:l.lat(),lng:l.lng()},S=Mt(Lt(o.points,s),C,p);L(u,nt(S),!0),n&&n.setMap(null),n=new google.maps.Polyline({path:S,map:t,geodesic:!0,strokeColor:"black",strokeOpacity:1,strokeWeight:3});const J=S[0],j=S[S.length-1],z=`
      					width: 12px;
      					height: 12px;
      					background-color: green;
      					border-radius: 50%;
      					border: 2px solid white;
    				`;new I({position:J,map:t,content:Object.assign(document.createElement("div"),{style:z})}),g&&(g.map=null),g=new I({position:j,map:t,content:Object.assign(document.createElement("div"),{style:z})});const Y=S.reduce((tt,et)=>({lat:tt.lat+et.lat,lng:tt.lng+et.lng}),{lat:0,lng:0});Y.lat/=S.length,Y.lng/=S.length,t.panTo(Y)},e=new T.Autocomplete(d,{fields:["place_id","geometry","name","formatted_address"],types:["geocode"]}),e.addListener("place_changed",()=>{l=e.getPlace()?.geometry?.location,l&&(L(c,!0),i())})});const v=w=>{w.preventDefault()};var x=Dt(),P=N(x),m=_(P);Q(m,{onButtonClick:()=>{L(f,"Mapping..."),o.nextStage(n)},description:"Time to place your masterpiece on the globe! Start by entering the address you want to start from. Afterwards, use the two sliders to adjust the size and rotation of your drawing.",get buttonText(){return y(f)},get buttonEnabled(){return y(c)}});var h=E(m,2),b=_(h),A=_(b),rt=_(A);K(rt,w=>d=w,()=>d),k(A),k(b);var $=E(b,2);{var it=w=>{var T=It();M(w,T)},st=w=>{var T=Ot(),I=_(T),C=E(_(I),2);C.__input=j=>{s=+j.target.value,i()},k(I);var S=E(I,2),J=E(_(S),2);J.__input=j=>{p=1e3/+j.target.value,i()},k(S),k(T),M(w,T)};R($,w=>{y(c)?w(st,!1):w(it)})}var lt=E($,2);K(lt,w=>r=w,()=>r),k(h),k(P);var ct=E(P,2);{var dt=w=>{var T=At(),I=_(T);k(T),U(C=>F(I,`Estimated Distance: ${C??""} km`),[()=>y(u).toFixed(2)]),M(w,T)};R(ct,w=>{y(c)&&w(dt)})}ot("submit",b,v),M(a,x),G()}V(["input"]);const Rt="AIzaSyDT13FvE14IXNVFi1XPOKTJXMRQLNaTeng";var jt=O('<div class="flex flex-row"><!> <div class="relative h-screen w-full"><div class="h-full w-full"></div> <div class="absolute top-3 right-3 rounded-xl border border-gray-300 bg-white/80 px-4 py-2 text-sm font-semibold text-gray-800 shadow-lg backdrop-blur-md"> </div></div></div>');function Bt(a,o){W(o,!0);let t,e,r=null,d=B(0);X(async()=>{if(!window||!e)return;const{Map:c}=await D("maps");await D("geometry");const{AdvancedMarkerElement:u}=await D("marker");if(t=new c(e,{center:{lat:43.4772382,lng:-80.5520715},mapId:"main",zoom:13,disableDefaultUI:!0}),!o.mapifiedPath)return;const f=o.mapifiedPath.map(([h,b])=>({lat:h,lng:b}));L(d,nt(f),!0),new google.maps.Polyline({path:f,map:t,geodesic:!0,strokeColor:"black",strokeOpacity:1,strokeWeight:3});const v=f[0],x=f[f.length-1],P=`
						width: 12px;
						height: 12px;
						background-color: red;
						border-radius: 50%;
						border: 2px solid white;
					`;new u({position:v,map:t,content:Object.assign(document.createElement("div"),{style:P})}),r&&(r.map=null),r=new u({position:x,map:t,content:Object.assign(document.createElement("div"),{style:P})});const m=f.reduce((h,b)=>({lat:h.lat+b.lat,lng:h.lng+b.lng}),{lat:0,lng:0});m.lat/=f.length,m.lng/=f.length,t.panTo(m)});var i=jt(),p=_(i);Q(p,{onButtonClick:()=>{},description:"Here is your mapified path! If its not what you expected, feel free to go back and adjust your address or rotation.",buttonText:"",buttonEnabled:!1});var s=E(p,2),l=_(s);K(l,c=>e=c,()=>e);var n=E(l,2),g=_(n);k(n),k(s),k(i),U(c=>F(g,`Distance: ${c??""} km`),[()=>y(d).toFixed(2)]),M(a,i),G()}function Xt(a,o){W(o,!1);let t=q(0),e=q(null),r=q();X(()=>{Tt({key:Rt})});const d=n=>{if(y(t)===0)L(e,n),L(t,y(t)+1);else if(y(t)===1){const g=n.getPath(),c=[];g.forEach(u=>{c.push([u.lat(),u.lng()])}),fetch("/api/mapify",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({points:c})}).then(u=>u.json()).then(u=>{L(r,u.points),L(t,y(t)+1)}).catch(u=>{mt.push(`Error: ${u}`,{theme:{"--toastBackground":"red","--toastColor":"white","--toastBarBackground":"white"}})})}};ut();var i=H(),p=N(i);{var s=n=>{wt(n,{nextStage:d})},l=n=>{var g=H(),c=N(g);{var u=v=>{Ct(v,{get points(){return y(e)},nextStage:d})},f=v=>{var x=H(),P=N(x);{var m=h=>{Bt(h,{get mapifiedPath(){return y(r)}})};R(P,h=>{y(t)===2&&h(m)},!0)}M(v,x)};R(c,v=>{y(t)===1?v(u):v(f,!1)},!0)}M(n,g)};R(p,n=>{y(t)===0?n(s):n(l,!1)})}M(a,i),G()}export{Xt as component};
